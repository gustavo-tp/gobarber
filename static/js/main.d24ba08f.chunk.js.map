{"version":3,"sources":["assets/logo.svg","assets/sign-in-background.png","assets/sign-up-background.png","styles/global.ts","services/api.ts","hooks/auth.tsx","components/ToastContainer/Toast/styles.ts","components/ToastContainer/Toast/index.tsx","components/ToastContainer/styles.ts","components/ToastContainer/index.tsx","hooks/toast.tsx","hooks/index.tsx","routes/Route.tsx","utils/getValidationErros.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/Dashboard/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","Provider","value","useAuth","context","useContext","Error","toastTypeVariations","info","css","success","error","Container","styled","animated","div","props","type","hasDescription","icons","size","Toast","message","style","removeToast","useToast","useEffect","timer","setTimeout","id","clearTimeout","description","title","onClick","ToastContainer","messages","messagesWithTransiction","useTransition","from","right","opacity","enter","leave","map","item","key","ToastContext","ToastProvider","setMessages","addToast","toast","uuid","state","filter","AppProvider","Route","isPrivate","Component","component","rest","console","log","render","location","to","pathname","getValidationErros","err","validationErros","inner","forEach","path","Tooltip","className","isErrored","isFocused","isFilled","Input","name","Icon","icon","inputRef","useRef","setIsFocused","setIsFilled","useField","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","ref","onFocus","onBlur","color","button","shade","Button","Content","appearFromLeft","keyframes","AnimationContainer","Background","signInBackgroundImg","SignIn","formRef","history","useHistory","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","src","logoImg","alt","onSubmit","FiMail","placeholder","FiLock","href","appearFromRight","signUpBackgroundImg","SignUp","min","FiUser","Dashboard","Routes","exact","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d24ba08f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cb3c3e0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/sign-in-background.6eac314f.png\";","module.exports = __webpack_public_path__ + \"static/media/sign-up-background.c4d8f988.png\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    background: #312E38;\r\n    color: #FFF;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n\r\n  body, input, button {\r\n    font-family: 'Roboto Slab', serif;\r\n    font-size: 16px;\r\n  }\r\n\r\n  h1, h2, h3, h4, h5, h6, strong {\r\n    font-weight: 500;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://gobarber-gustavo-tp.herokuapp.com',\n});\n\nexport default api;\n","import React, { createContext, useCallback, useState, useContext } from 'react';\r\nimport api from '../services/api';\r\n\r\ninterface AuthState {\r\n  token: string;\r\n  user: Record<string, unknown>;\r\n}\r\n\r\ninterface SignInCredentials {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface AuthContextData {\r\n  user: Record<string, unknown>;\r\n  signIn(credentials: SignInCredentials): Promise<void>;\r\n  signOut(): void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nconst AuthProvider: React.FC = ({ children }) => {\r\n  const [data, setData] = useState<AuthState>(() => {\r\n    const token = localStorage.getItem('@GoBarber:token');\r\n    const user = localStorage.getItem('@GoBarber:user');\r\n\r\n    if (token && user) {\r\n      return { token, user: JSON.parse(user) };\r\n    }\r\n\r\n    return {} as AuthState;\r\n  });\r\n\r\n  const signIn = useCallback(async ({ email, password }) => {\r\n    const response = await api.post('sessions', { email, password });\r\n\r\n    const { token, user } = response.data;\r\n\r\n    localStorage.setItem('@GoBarber:token', token);\r\n    localStorage.setItem('@GoBarber:user', JSON.stringify(user));\r\n\r\n    setData({ token, user });\r\n  }, []);\r\n\r\n  const signOut = useCallback(() => {\r\n    localStorage.removeItem('@GoBarber:token');\r\n    localStorage.removeItem('@GoBarber:user');\r\n\r\n    setData({} as AuthState);\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user: data.user, signIn, signOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useAuth(): AuthContextData {\r\n  const context = useContext(AuthContext);\r\n\r\n  if (!context) {\r\n    throw new Error('usedAuth must be used within an AuthProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { AuthProvider, useAuth };\r\n","import styled, { css } from 'styled-components';\r\nimport { animated } from 'react-spring';\r\n\r\ninterface ContainerProps {\r\n  type?: 'success' | 'error' | 'info';\r\n  hasDescription: boolean;\r\n}\r\n\r\nconst toastTypeVariations = {\r\n  info: css`\r\n    background: #ebf8ff;\r\n    color: #3172b7;\r\n  `,\r\n  success: css`\r\n    background: #e6fffa;\r\n    color: #2e656a;\r\n  `,\r\n  error: css`\r\n    background: #fddede;\r\n    color: #c53030;\r\n  `,\r\n};\r\n\r\nexport const Container = styled(animated.div)<ContainerProps>`\r\n  width: 360px;\r\n\r\n  position: relative;\r\n  padding: 16px 30px 16px 16px;\r\n  border-radius: 10px;\r\n  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);\r\n\r\n  display: flex;\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props => toastTypeVariations[props.type || 'info']}\r\n\r\n  > svg {\r\n    margin: 4px 12px 0 0;\r\n  }\r\n\r\n  div {\r\n    flex: 1;\r\n\r\n    p {\r\n      margin-top: 4px;\r\n      font-size: 14px;\r\n      opacity: 0.8;\r\n      line-height: 20px;\r\n    }\r\n  }\r\n\r\n  button {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 19px;\r\n    opacity: 0.6;\r\n    border: 0;\r\n    background: transparent;\r\n    color: inherit;\r\n  }\r\n\r\n  ${props =>\r\n    !props.hasDescription &&\r\n    css`\r\n      align-items: center;\r\n\r\n      svg {\r\n        margin-top: 0;\r\n      }\r\n    `}\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport {\r\n  FiAlertCircle,\r\n  FiCheckCircle,\r\n  FiInfo,\r\n  FiXCircle,\r\n} from 'react-icons/fi';\r\n\r\nimport { ToastMessage, useToast } from '../../../hooks/toast';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface ToastProps {\r\n  message: ToastMessage;\r\n  style: Record<string, unknown>;\r\n}\r\n\r\nconst icons = {\r\n  info: <FiInfo size={24} />,\r\n  error: <FiAlertCircle size={24} />,\r\n  success: <FiCheckCircle size={24} />,\r\n};\r\n\r\nconst Toast: React.FC<ToastProps> = ({ message, style }) => {\r\n  const { removeToast } = useToast();\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      removeToast(message.id);\r\n    }, 3000);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [removeToast, message.id]);\r\n\r\n  return (\r\n    <Container\r\n      type={message.type}\r\n      hasDescription={!!message.description}\r\n      style={style}\r\n    >\r\n      {icons[message.type || 'info']}\r\n\r\n      <div>\r\n        <strong>{message.title}</strong>\r\n        {message.description && <p>{message.description}</p>}\r\n      </div>\r\n\r\n      <button onClick={() => removeToast(message.id)} type=\"button\">\r\n        <FiXCircle size={18} />\r\n      </button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 30px;\r\n  overflow: hidden;\r\n`;\r\n","import React from 'react';\r\nimport { useTransition } from 'react-spring';\r\n\r\nimport Toast from './Toast';\r\n\r\nimport { ToastMessage } from '../../hooks/toast';\r\nimport { Container } from './styles';\r\n\r\ninterface ToastContainerProps {\r\n  messages: ToastMessage[];\r\n}\r\n\r\nconst ToastContainer: React.FC<ToastContainerProps> = ({ messages }) => {\r\n  const messagesWithTransiction = useTransition(\r\n    messages,\r\n    message => message.id,\r\n    {\r\n      from: { right: '-120%', opacity: 0 },\r\n      enter: { right: '0%', opacity: 1 },\r\n      leave: { right: '-120%', opacity: 0 },\r\n    },\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {messagesWithTransiction.map(({ item, key, props }) => (\r\n        <Toast key={key} style={props} message={item} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ToastContainer;\r\n","import React, { createContext, useCallback, useContext, useState } from 'react';\r\nimport { uuid } from 'uuidv4';\r\n\r\nimport ToastContainer from '../components/ToastContainer';\r\n\r\nexport interface ToastMessage {\r\n  id: string;\r\n  type?: 'success' | 'error' | 'info';\r\n  title: string;\r\n  description?: string;\r\n}\r\n\r\ninterface ToastContextData {\r\n  addToast(message: Omit<ToastMessage, 'id'>): void;\r\n  removeToast(id: string): void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextData>({} as ToastContextData);\r\n\r\nconst ToastProvider: React.FC = ({ children }) => {\r\n  const [messages, setMessages] = useState<ToastMessage[]>([]);\r\n\r\n  const addToast = useCallback(\r\n    ({ type, title, description }: Omit<ToastMessage, 'id'>) => {\r\n      const id = uuid();\r\n\r\n      const toast = {\r\n        id,\r\n        type,\r\n        title,\r\n        description,\r\n      };\r\n\r\n      setMessages(state => [...state, toast]);\r\n    },\r\n    [],\r\n  );\r\n\r\n  const removeToast = useCallback((id: string) => {\r\n    setMessages(state => state.filter(message => message.id !== id));\r\n  }, []);\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ addToast, removeToast }}>\r\n      {children}\r\n      <ToastContainer messages={messages} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nfunction useToast(): ToastContextData {\r\n  const context = useContext(ToastContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport { ToastProvider, useToast };\r\n","import React from 'react';\r\n\r\nimport { AuthProvider } from './auth';\r\nimport { ToastProvider } from './toast';\r\n\r\nconst AppProvider: React.FC = ({ children }) => (\r\n  <AuthProvider>\r\n    <ToastProvider>{children}</ToastProvider>\r\n  </AuthProvider>\r\n);\r\n\r\nexport default AppProvider;\r\n","import React from 'react';\r\nimport {\r\n  Route as ReactDOMRoute,\r\n  RouteProps as ReactDOMRouteProps,\r\n  Redirect,\r\n} from 'react-router-dom';\r\n\r\nimport { useAuth } from '../hooks/auth';\r\n\r\ninterface RouteProps extends ReactDOMRouteProps {\r\n  isPrivate?: boolean;\r\n  component: React.ComponentType;\r\n}\r\n\r\nconst Route: React.FC<RouteProps> = ({\r\n  isPrivate = false,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  const { user } = useAuth();\r\n\r\n  console.log(isPrivate, !!user);\r\n\r\n  return (\r\n    <ReactDOMRoute\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return isPrivate === !!user ? (\r\n          <Component />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: isPrivate ? '/' : '/dashboard',\r\n              // state: { from: location },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Route;\r\n","import { ValidationError } from 'yup';\r\n\r\ninterface Erros {\r\n  [key: string]: string;\r\n}\r\n\r\nexport default function getValidationErros(err: ValidationError): Erros {\r\n  const validationErros: Erros = {};\r\n\r\n  err.inner.forEach(error => {\r\n    validationErros[error.path] = error.message;\r\n  });\r\n\r\n  return validationErros;\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n\r\n  span {\r\n    width: 160px;\r\n    background: #ff9000;\r\n    padding: 8px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    opacity: 0;\r\n    transition: opacity 0.2s;\r\n    visibility: hidden;\r\n\r\n    position: absolute;\r\n    bottom: calc(100% + 12px);\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n\r\n    color: #312e38;\r\n\r\n    &::before {\r\n      content: '';\r\n      border-style: solid;\r\n      border-color: #ff9000 transparent;\r\n      border-width: 6px 6px 0 6px;\r\n      top: 100%;\r\n      position: absolute;\r\n      left: 50%;\r\n      transform: translateX(-50%);\r\n    }\r\n  }\r\n\r\n  &:hover span {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface TooltipProps {\r\n  title: string;\r\n  className?: string;\r\n}\r\n\r\nconst Tooltip: React.FC<TooltipProps> = ({\r\n  title,\r\n  className = '',\r\n  children,\r\n}) => (\r\n  <Container className={className}>\r\n    {children}\r\n    <span>{title}</span>\r\n  </Container>\r\n);\r\n\r\nexport default Tooltip;\r\n","import styled, { css } from 'styled-components';\r\n\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface ContainerProps {\r\n  isFocused: boolean;\r\n  isFilled: boolean;\r\n  isErrored: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  background: #232129;\r\n  border-radius: 10px;\r\n  padding: 16px;\r\n  width: 100%;\r\n\r\n  border: 2px solid #232129;\r\n  color: #666360;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: #c53030;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: #ff9000;\r\n      border-color: #ff9000;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFilled &&\r\n    css`\r\n      color: #ff9000;\r\n    `}\r\n\r\n  input {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: 0;\r\n    color: #f4ede8;\r\n\r\n    &::placeholder {\r\n      color: #666360;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: #c53030;\r\n    color: #fff;\r\n\r\n    &::before {\r\n      border-color: #c53030 transparent;\r\n    }\r\n  }\r\n`;\r\n","import React, {\r\n  InputHTMLAttributes,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n} from 'react';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { FiAlertCircle } from 'react-icons/fi';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container, Error } from './styles';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  icon: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isFilled, setIsFilled] = useState(false);\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n\r\n    setIsFilled(!!inputRef.current?.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\r\n      {Icon && <Icon size={20} />}\r\n      <input\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        defaultValue={defaultValue}\r\n        ref={inputRef}\r\n        {...rest}\r\n      />\r\n\r\n      {error && (\r\n        <Error title={error}>\r\n          <FiAlertCircle color=\"#c53030\" size={20} />\r\n        </Error>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nexport const Container = styled.button`\r\n  background: #ff9000;\r\n  height: 56px;\r\n  border-radius: 10px;\r\n  border: 0;\r\n  padding: 0 16px;\r\n  color: #312e38;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  margin-top: 16px;\r\n  transition: background-color 0.2s;\r\n\r\n  &:hover {\r\n    background: ${shade(0.2, '#ff9000')};\r\n  }\r\n`;\r\n","import React, { ButtonHTMLAttributes } from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\ntype ButtonProps = ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: React.FC<ButtonProps> = ({ children, ...rest }) => (\r\n  <Container type=\"button\" {...rest}>\r\n    {children}\r\n  </Container>\r\n);\r\n\r\nexport default Button;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signInBackgroundImg from '../../assets/sign-in-background.png';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  place-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromLeft = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translate(-50px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  animation: ${appearFromLeft} 1s;\r\n\r\n  form {\r\n    margin: 80px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: #f4ede8;\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${shade(0.2, '#f4ede8')};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #ff9000;\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#ff9000')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signInBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useRef, useCallback } from 'react';\r\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { useAuth } from '../../hooks/auth';\r\nimport { useToast } from '../../hooks/toast';\r\nimport getValidationErros from '../../utils/getValidationErros';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\ninterface SignInFormData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignIn: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const { signIn } = useAuth();\r\n  const { addToast } = useToast();\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: SignInFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          password: Yup.string().required('Senha obrigatória'),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        await signIn({\r\n          email: data.email,\r\n          password: data.password,\r\n        });\r\n\r\n        history.push('/dashboard');\r\n      } catch (error) {\r\n        if (error instanceof Yup.ValidationError) {\r\n          const errors = getValidationErros(error);\r\n\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro na autenticação',\r\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\r\n        });\r\n      }\r\n    },\r\n    [signIn, addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Faça seu logon</h1>\r\n\r\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Entrar</Button>\r\n\r\n            <a href=\"forgot\">Esqueci minha senha</a>\r\n          </Form>\r\n\r\n          <Link to=\"/signup\">\r\n            <FiLogIn />\r\n            Criar conta\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n\r\n      <Background />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport signUpBackgroundImg from '../../assets/sign-up-background.png';\r\n\r\nexport const Container = styled.div`\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  align-items: stretch;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  place-content: center;\r\n\r\n  width: 100%;\r\n  max-width: 700px;\r\n`;\r\n\r\nconst appearFromRight = keyframes`\r\n  from {\r\n    opacity: 0;\r\n    transform: translate(50px);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n`;\r\n\r\nexport const AnimationContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  animation: ${appearFromRight} 1s;\r\n\r\n  form {\r\n    margin: 80px 0;\r\n    width: 340px;\r\n    text-align: center;\r\n\r\n    h1 {\r\n      margin-bottom: 24px;\r\n    }\r\n\r\n    a {\r\n      color: #f4ede8;\r\n      display: block;\r\n      margin-top: 24px;\r\n      text-decoration: none;\r\n      transition: color 0.2s;\r\n\r\n      &:hover {\r\n        color: ${shade(0.2, '#f4ede8')};\r\n      }\r\n    }\r\n  }\r\n\r\n  > a {\r\n    color: #f4ede8;\r\n    display: block;\r\n    margin-top: 24px;\r\n    text-decoration: none;\r\n    transition: color 0.2s;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    svg {\r\n      margin-right: 16px;\r\n    }\r\n\r\n    &:hover {\r\n      color: ${shade(0.2, '#f4ede8')};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  flex: 1;\r\n  background: url(${signUpBackgroundImg}) no-repeat center;\r\n  background-size: cover;\r\n`;\r\n","import React, { useCallback, useRef } from 'react';\r\nimport { FiArrowLeft, FiUser, FiMail, FiLock } from 'react-icons/fi';\r\nimport { FormHandles } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport { useToast } from '../../hooks/toast';\r\n\r\nimport getValidationErros from '../../utils/getValidationErros';\r\n\r\nimport logoImg from '../../assets/logo.svg';\r\n\r\nimport Input from '../../components/Input';\r\nimport Button from '../../components/Button';\r\n\r\nimport { Container, Content, AnimationContainer, Background } from './styles';\r\n\r\ninterface SignUpFormData {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst SignUp: React.FC = () => {\r\n  const formRef = useRef<FormHandles>(null);\r\n  const { addToast } = useToast();\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = useCallback(\r\n    async (data: SignUpFormData) => {\r\n      try {\r\n        formRef.current?.setErrors({});\r\n\r\n        const schema = Yup.object().shape({\r\n          name: Yup.string().required('Nome obrigatório'),\r\n          email: Yup.string()\r\n            .required('E-mail obrigatório')\r\n            .email('Digite um e-mail válido'),\r\n          password: Yup.string().min(6, 'No mínimo 6 dígitos'),\r\n        });\r\n\r\n        await schema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n\r\n        await api.post('/users', data);\r\n\r\n        history.push('/');\r\n\r\n        addToast({\r\n          type: 'success',\r\n          title: 'Cadastro realizado!',\r\n          description: 'você já pode fazer seu logon no GoBarber',\r\n        });\r\n      } catch (error) {\r\n        if (error instanceof Yup.ValidationError) {\r\n          const errors = getValidationErros(error);\r\n\r\n          formRef.current?.setErrors(errors);\r\n\r\n          return;\r\n        }\r\n\r\n        addToast({\r\n          type: 'error',\r\n          title: 'Erro no cadastro',\r\n          description: 'Ocorreu um erro ao fazer cadastro, tente novamente.',\r\n        });\r\n      }\r\n    },\r\n    [addToast, history],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      <Background />\r\n\r\n      <Content>\r\n        <AnimationContainer>\r\n          <img src={logoImg} alt=\"GoBarber\" />\r\n\r\n          <Form ref={formRef} onSubmit={handleSubmit}>\r\n            <h1>Faça seu logon</h1>\r\n\r\n            <Input name=\"name\" icon={FiUser} placeholder=\"Nome\" />\r\n            <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\r\n            <Input\r\n              name=\"password\"\r\n              icon={FiLock}\r\n              type=\"password\"\r\n              placeholder=\"Senha\"\r\n            />\r\n\r\n            <Button type=\"submit\">Cadastrar</Button>\r\n          </Form>\r\n\r\n          <Link to=\"/\">\r\n            <FiArrowLeft />\r\n            Voltar para logon\r\n          </Link>\r\n        </AnimationContainer>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  console.log('entrei');\r\n  return <h1>Dashboard</h1>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport Route from './Route';\r\n\r\nimport SignIn from '../pages/SignIn';\r\nimport SignUp from '../pages/SignUp';\r\nimport Dashboard from '../pages/Dashboard';\r\n\r\nconst Routes: React.FC = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={SignIn} />\r\n    <Route path=\"/signup\" component={SignUp} />\r\n\r\n    <Route path=\"/dashboard\" component={Dashboard} isPrivate />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\n\nimport AppProvider from './hooks';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <Router basename=\"gobarber\">\n    <AppProvider>\n      <Routes />\n    </AppProvider>\n\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}